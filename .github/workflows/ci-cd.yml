name: CI/CD Knowva Frontend

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  # --- JOB BUILD ---
  build:
    name: Build React App
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Set API URL for Production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "VITE_SERVER_URL=${{ secrets.API_URL_PROD }}" > .env
          echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID_PROD }}" >> .env
          echo "VITE_EMAILJS_SERVICE_ID=${{ secrets.EMAILJS_SERVICE_ID }}" >> .env
          echo "VITE_EMAILJS_TEMPLATE_ID=${{ secrets.EMAILJS_TEMPLATE_ID }}" >> .env
          echo "VITE_EMAILJS_PUBLIC_KEY=${{ secrets.EMAILJS_PUBLIC_KEY }}" >> .env
          echo "VITE_GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}" >> .env

      - name: Set API URL for Development
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "VITE_SERVER_URL=${{ secrets.API_URL_DEV }}" > .env
          echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID_DEV }}" >> .env
          echo "VITE_EMAILJS_SERVICE_ID=${{ secrets.EMAILJS_SERVICE_ID }}" >> .env
          echo "VITE_EMAILJS_TEMPLATE_ID=${{ secrets.EMAILJS_TEMPLATE_ID }}" >> .env
          echo "VITE_EMAILJS_PUBLIC_KEY=${{ secrets.EMAILJS_PUBLIC_KEY }}" >> .env
          echo "VITE_GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}" >> .env

      - name: Build React App
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: dist/
          retention-days: 1

  # --- JOB DEPLOY PRODUCTION ---
  deploy-prod:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: dist

      - name: Copy Build Files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_IP_FE }}
          username: ${{ secrets.USERNAME_FE }}
          key: ${{ secrets.SSH_PRIVATE_KEY_FE }}
          source: "dist/*"
          target: "/var/www/knowva/prod"
          strip_components: 1

  # --- JOB DEPLOY TEST ---
  deploy-dev:
    name: Deploy to Test Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: dist

      - name: Copy Build Files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_IP_FE }}
          username: ${{ secrets.USERNAME_FE }}
          key: ${{ secrets.SSH_PRIVATE_KEY_FE }}
          source: "dist/*"
          target: "/var/www/knowva/dev"
          strip_components: 1
